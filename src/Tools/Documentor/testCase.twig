<?php

declare(strict_types=1);

/*
 * This Test file is autogenerated at {{ "now"|date("m/d/Y g:ia") }} by gpupo/common-sdk
 * @see <https://opensource.gpupo.com/common-sdk/>
 */

namespace {{testNamespace}};

{% if entity %}
use Gpupo\CommonSdk\Entity\EntityInterface;
use Gpupo\Tests\CommonSdk\Traits\EntityTrait;
{% endif %}

{% if testcase %}
use {{testcase}} as CoreTestCase;
{% else %}
use PHPUnit\Framework\TestCase as CoreTestCase;
{% endif %}

use {{class}};

{{ block|trim }}
class {{ testShortName }} extends CoreTestCase
{
{% if entity %}
    use EntityTrait;

    const QUALIFIED = {{ classShortName }}::class;

    public static function setUpBeforeClass()
    {
        static::setFullyQualifiedObject(self::QUALIFIED);
        parent::setUpBeforeClass();
    }

{% endif %}

    /**
     * @return {{classShortName}}
     */
    public function dataProvider{{ classShortName }}()
    {
{% if entity %}
    {{ expected|raw }}
        return $this->dataProviderEntitySchema(self::QUALIFIED, $expected);
{% else %}
        $expected = [
        {% for method in magic_methods %}
         "{{ method.name }}" => {{ method.fixture|raw }},
        {% endfor %}
        ];
        $object = new {{ classShortName }}();

        return [[$object, $expected]];
{% endif %}
    }
    {{ asserts|raw }}

}
